from datetime import UTC, datetime

from postavleno_bot.services.accounts import AccountProfile
from postavleno_bot.ui.texts import help_message, profile_header


def build_profile(**overrides: object) -> AccountProfile:
    base = dict(
        display_login="Demo",
        username="demo",
        password_hash="hash",
        created_at=datetime(2024, 1, 1, tzinfo=UTC),
        company_name="Demo LLC",
        email="user@example.com",
        wb_api="TOKEN1234567890",
        email_verified=True,
        email_pending_hash=None,
        email_pending_expires_at=None,
    )
    base.update(overrides)
    return AccountProfile.from_dict(base)


def test_profile_header_includes_status_icons() -> None:
    profile = build_profile()
    text = profile_header(profile)
    assert "üë§ –ü—Ä–æ—Ñ–∏–ª—å: Demo" in text
    assert "–ö–æ–º–ø–∞–Ω–∏—è: Demo LLC" in text
    assert "–ü–æ—á—Ç–∞: user@example.com (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚úÖ)" in text
    assert "WB API" in text
    assert "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: 01.01.2024" in text


def test_help_message_switches_for_authorization() -> None:
    unauth = help_message("–ì–æ—Å—Ç—å", authorized=False)
    auth = help_message("Demo", authorized=True)

    expected_unauth = "\n".join(
        [
            "–ü—Ä–∏–≤–µ—Ç, –ì–æ—Å—Ç—å! ‚ú®",
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç Postavleno_Bot.",
            "",
            "–ö–∞–∫ –Ω–∞—á–∞—Ç—å:",
            "1) –ü—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            "2) –ù–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ:",
            "   ‚Äî ¬´–ö–æ–º–ø–∞–Ω–∏—è¬ª ‚Äî —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∂–µ).",
            "   ‚Äî ¬´–ü–æ—á—Ç–∞¬ª ‚Äî –ø—Ä–∏–≤—è–∂–∏—Ç–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email (–Ω–∞ –Ω–µ–≥–æ –ø—Ä–∏–¥—ë—Ç –∫–æ–¥).",
            "   ‚Äî ¬´WB API¬ª ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ WB (–î–æ—Å—Ç—É–ø –∫ API).",
            "3) –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤—ã–≥—Ä—É–∑–∫—É.",
            "4) ¬´–û–±–Ω–æ–≤–∏—Ç—å¬ª ‚Äî –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤.",
            "5) ¬´–í—ã–π—Ç–∏¬ª ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é.",
        ]
    )
    expected_auth = "\n".join(
        [
            "–ü—Ä–∏–≤–µ—Ç, Demo! ‚ú®",
            "–ú–µ–Ω—è –∑–æ–≤—É—Ç Postavleno_Bot.",
            "",
            "–ö–∞–∫ –Ω–∞—á–∞—Ç—å:",
            "1) –û—Ç–∫—Ä–æ–π—Ç–µ ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:",
            "   ‚Äî ¬´–ö–æ–º–ø–∞–Ω–∏—è¬ª ‚Äî —É–∫–∞–∂–∏—Ç–µ/–∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
            "   ‚Äî ¬´–ü–æ—á—Ç–∞¬ª ‚Äî –ø—Ä–∏–≤—è–∂–∏—Ç–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email (–Ω–∞ –Ω–µ–≥–æ –ø—Ä–∏–¥—ë—Ç –∫–æ–¥).",
            "   ‚Äî ¬´WB API¬ª ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ WB (–î–æ—Å—Ç—É–ø –∫ API).",
            "2) –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤—ã–≥—Ä—É–∑–∫—É.",
            "3) ¬´–û–±–Ω–æ–≤–∏—Ç—å¬ª ‚Äî –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤.",
            "4) ¬´–í—ã–π—Ç–∏¬ª ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é.",
        ]
    )

    assert unauth == expected_unauth
    assert auth == expected_auth
